// <auto-generated />
using System;
using InternshippClass.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InternshippClass.Migrations
{
    [DbContext(typeof(ProvoloneContext))]
    [Migration("20211211020206_add-all-entities")]
    partial class addallentities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("InternshippClass.Models.Entities.Discipline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("MarkId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("VocationalGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("VocationalGroupId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Field", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DisciplineId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FieldId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.GroupToDiscipline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DisciplineId")
                        .HasColumnType("bigint");

                    b.Property<long>("VocationalGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("VocationalGroupId");

                    b.ToTable("GroupsToDisciplines");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Learner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MarkId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VocationalGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VocationalGroupId");

                    b.ToTable("Learners");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Mark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("DisciplineId")
                        .HasColumnType("bigint");

                    b.Property<long>("LearnerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.VocationalGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DisciplineId")
                        .HasColumnType("bigint");

                    b.Property<long>("LearnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("VocationalGroups");
                });

            modelBuilder.Entity("LearnerMark", b =>
                {
                    b.Property<long>("LearnersId")
                        .HasColumnType("bigint");

                    b.Property<long>("MarksId")
                        .HasColumnType("bigint");

                    b.HasKey("LearnersId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("LearnerMark");
                });

            modelBuilder.Entity("Provolone.Domains.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Discipline", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.Mark", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("MarkId");

                    b.HasOne("InternshippClass.Models.Entities.VocationalGroup", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("VocationalGroupId");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Field", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.Field", null)
                        .WithMany("Fields")
                        .HasForeignKey("FieldId");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.GroupToDiscipline", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshippClass.Models.Entities.VocationalGroup", "VocationalGroup")
                        .WithMany()
                        .HasForeignKey("VocationalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("VocationalGroup");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Learner", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.VocationalGroup", null)
                        .WithMany("Learners")
                        .HasForeignKey("VocationalGroupId");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Permission", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("LearnerMark", b =>
                {
                    b.HasOne("InternshippClass.Models.Entities.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshippClass.Models.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Field", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Mark", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("InternshippClass.Models.Entities.VocationalGroup", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("Learners");
                });
#pragma warning restore 612, 618
        }
    }
}
